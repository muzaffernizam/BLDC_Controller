////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2012 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.2
//  \   \         Application : sch2hdl
//  /   /         Filename : PID_Module.vf
// /___/   /\     Timestamp : 09/25/2016 21:44:06
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog E:/FPGA_Xilinx/Complete_Fira_1.0_working_22_08_2015/PID_Module.vf -w E:/FPGA_Xilinx/Complete_Fira_1.0_working_22_08_2015/PID_Module.sch
//Design Name: PID_Module
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module OCR_8_MUSER_PID_Module(Inp0, 
                              Sel, 
                              Outpt);

    input [15:0] Inp0;
    input Sel;
   output [7:0] Outpt;
   
   wire XLXN_56;
   
   MUXCY  XLXI_18 (.CI(XLXN_56), 
                  .DI(Inp0[1]), 
                  .S(Sel), 
                  .O(Outpt[1]));
   MUXCY  XLXI_19 (.CI(XLXN_56), 
                  .DI(Inp0[0]), 
                  .S(Sel), 
                  .O(Outpt[0]));
   MUXCY  XLXI_20 (.CI(XLXN_56), 
                  .DI(Inp0[2]), 
                  .S(Sel), 
                  .O(Outpt[2]));
   MUXCY  XLXI_21 (.CI(XLXN_56), 
                  .DI(Inp0[3]), 
                  .S(Sel), 
                  .O(Outpt[3]));
   MUXCY  XLXI_24 (.CI(XLXN_56), 
                  .DI(Inp0[4]), 
                  .S(Sel), 
                  .O(Outpt[4]));
   MUXCY  XLXI_25 (.CI(XLXN_56), 
                  .DI(Inp0[5]), 
                  .S(Sel), 
                  .O(Outpt[5]));
   MUXCY  XLXI_26 (.CI(XLXN_56), 
                  .DI(Inp0[6]), 
                  .S(Sel), 
                  .O(Outpt[6]));
   MUXCY  XLXI_27 (.CI(XLXN_56), 
                  .DI(Inp0[7]), 
                  .S(Sel), 
                  .O(Outpt[7]));
   VCC  XLXI_67 (.P(XLXN_56));
endmodule
`timescale 1ns / 1ps

module Mux_2_16_MUSER_PID_Module(Inp0, 
                                 Inp1, 
                                 S_0, 
                                 Output);

    input [15:0] Inp0;
    input [15:0] Inp1;
    input S_0;
   output [15:0] Output;
   
   
   MUXCY  XLXI_1 (.CI(Inp1[3]), 
                 .DI(Inp0[3]), 
                 .S(S_0), 
                 .O(Output[3]));
   MUXCY  XLXI_9 (.CI(Inp1[0]), 
                 .DI(Inp0[0]), 
                 .S(S_0), 
                 .O(Output[0]));
   MUXCY  XLXI_18 (.CI(Inp1[1]), 
                  .DI(Inp0[1]), 
                  .S(S_0), 
                  .O(Output[1]));
   MUXCY  XLXI_24 (.CI(Inp1[4]), 
                  .DI(Inp0[4]), 
                  .S(S_0), 
                  .O(Output[4]));
   MUXCY  XLXI_25 (.CI(Inp1[5]), 
                  .DI(Inp0[5]), 
                  .S(S_0), 
                  .O(Output[5]));
   MUXCY  XLXI_26 (.CI(Inp1[6]), 
                  .DI(Inp0[6]), 
                  .S(S_0), 
                  .O(Output[6]));
   MUXCY  XLXI_27 (.CI(Inp1[7]), 
                  .DI(Inp0[7]), 
                  .S(S_0), 
                  .O(Output[7]));
   MUXCY  XLXI_28 (.CI(Inp1[8]), 
                  .DI(Inp0[8]), 
                  .S(S_0), 
                  .O(Output[8]));
   MUXCY  XLXI_31 (.CI(Inp1[9]), 
                  .DI(Inp0[9]), 
                  .S(S_0), 
                  .O(Output[9]));
   MUXCY  XLXI_35 (.CI(Inp1[10]), 
                  .DI(Inp0[10]), 
                  .S(S_0), 
                  .O(Output[10]));
   MUXCY  XLXI_37 (.CI(Inp1[11]), 
                  .DI(Inp0[11]), 
                  .S(S_0), 
                  .O(Output[11]));
   MUXCY  XLXI_47 (.CI(Inp1[12]), 
                  .DI(Inp0[12]), 
                  .S(S_0), 
                  .O(Output[12]));
   MUXCY  XLXI_48 (.CI(Inp1[13]), 
                  .DI(Inp0[13]), 
                  .S(S_0), 
                  .O(Output[13]));
   MUXCY  XLXI_49 (.CI(Inp1[14]), 
                  .DI(Inp0[14]), 
                  .S(S_0), 
                  .O(Output[14]));
   MUXCY  XLXI_53 (.CI(Inp1[2]), 
                  .DI(Inp0[2]), 
                  .S(S_0), 
                  .O(Output[2]));
   MUXCY  XLXI_57 (.CI(Inp1[15]), 
                  .DI(Inp0[15]), 
                  .S(S_0), 
                  .O(Output[15]));
endmodule
`timescale 1ns / 1ps

module Mux_2_8_MUSER_PID_Module(Inp0, 
                                Inp1, 
                                Sel, 
                                Output);

    input [7:0] Inp0;
    input [7:0] Inp1;
    input Sel;
   output [7:0] Output;
   
   
   MUXCY  XLXI_18 (.CI(Inp1[1]), 
                  .DI(Inp0[1]), 
                  .S(Sel), 
                  .O(Output[1]));
   MUXCY  XLXI_19 (.CI(Inp1[0]), 
                  .DI(Inp0[0]), 
                  .S(Sel), 
                  .O(Output[0]));
   MUXCY  XLXI_20 (.CI(Inp1[2]), 
                  .DI(Inp0[2]), 
                  .S(Sel), 
                  .O(Output[2]));
   MUXCY  XLXI_21 (.CI(Inp1[3]), 
                  .DI(Inp0[3]), 
                  .S(Sel), 
                  .O(Output[3]));
   MUXCY  XLXI_24 (.CI(Inp1[4]), 
                  .DI(Inp0[4]), 
                  .S(Sel), 
                  .O(Output[4]));
   MUXCY  XLXI_25 (.CI(Inp1[5]), 
                  .DI(Inp0[5]), 
                  .S(Sel), 
                  .O(Output[5]));
   MUXCY  XLXI_26 (.CI(Inp1[6]), 
                  .DI(Inp0[6]), 
                  .S(Sel), 
                  .O(Output[6]));
   MUXCY  XLXI_27 (.CI(Inp1[7]), 
                  .DI(Inp0[7]), 
                  .S(Sel), 
                  .O(Output[7]));
endmodule
`timescale 1ns / 1ps

module INV16_MXILINX_PID_Module(I, 
                                O);

    input [15:0] I;
   output [15:0] O;
   
   
   INV  I_36_30 (.I(I[8]), 
                .O(O[8]));
   INV  I_36_31 (.I(I[9]), 
                .O(O[9]));
   INV  I_36_32 (.I(I[10]), 
                .O(O[10]));
   INV  I_36_33 (.I(I[11]), 
                .O(O[11]));
   INV  I_36_34 (.I(I[15]), 
                .O(O[15]));
   INV  I_36_35 (.I(I[14]), 
                .O(O[14]));
   INV  I_36_36 (.I(I[13]), 
                .O(O[13]));
   INV  I_36_37 (.I(I[12]), 
                .O(O[12]));
   INV  I_36_38 (.I(I[4]), 
                .O(O[4]));
   INV  I_36_39 (.I(I[5]), 
                .O(O[5]));
   INV  I_36_40 (.I(I[6]), 
                .O(O[6]));
   INV  I_36_41 (.I(I[7]), 
                .O(O[7]));
   INV  I_36_42 (.I(I[3]), 
                .O(O[3]));
   INV  I_36_43 (.I(I[2]), 
                .O(O[2]));
   INV  I_36_44 (.I(I[1]), 
                .O(O[1]));
   INV  I_36_45 (.I(I[0]), 
                .O(O[0]));
endmodule
`timescale 1ns / 1ps

module Twos_Comp_MUSER_PID_Module(InPut, 
                                  Twos_Comp);

    input [15:0] InPut;
   output [15:0] Twos_Comp;
   
   wire [15:0] XLXN_1;
   wire XLXN_2;
   
   (* HU_SET = "XLXI_1_13" *) 
   INV16_MXILINX_PID_Module  XLXI_1 (.I(InPut[15:0]), 
                                    .O(XLXN_1[15:0]));
   Incrementer_Decrementer_16  XLXI_2 (.add_0(XLXN_2), 
                                      .In_16(XLXN_1[15:0]), 
                                      .OUT_16(Twos_Comp[15:0]));
   GND  XLXI_3 (.G(XLXN_2));
endmodule
`timescale 1ns / 1ps

module FD16RE_MXILINX_PID_Module(C, 
                                 CE, 
                                 D, 
                                 R, 
                                 Q);

    input C;
    input CE;
    input [15:0] D;
    input R;
   output [15:0] Q;
   
   
   FDRE #( .INIT(1'b0) ) I_Q0 (.C(C), 
              .CE(CE), 
              .D(D[0]), 
              .R(R), 
              .Q(Q[0]));
   FDRE #( .INIT(1'b0) ) I_Q1 (.C(C), 
              .CE(CE), 
              .D(D[1]), 
              .R(R), 
              .Q(Q[1]));
   FDRE #( .INIT(1'b0) ) I_Q2 (.C(C), 
              .CE(CE), 
              .D(D[2]), 
              .R(R), 
              .Q(Q[2]));
   FDRE #( .INIT(1'b0) ) I_Q3 (.C(C), 
              .CE(CE), 
              .D(D[3]), 
              .R(R), 
              .Q(Q[3]));
   FDRE #( .INIT(1'b0) ) I_Q4 (.C(C), 
              .CE(CE), 
              .D(D[4]), 
              .R(R), 
              .Q(Q[4]));
   FDRE #( .INIT(1'b0) ) I_Q5 (.C(C), 
              .CE(CE), 
              .D(D[5]), 
              .R(R), 
              .Q(Q[5]));
   FDRE #( .INIT(1'b0) ) I_Q6 (.C(C), 
              .CE(CE), 
              .D(D[6]), 
              .R(R), 
              .Q(Q[6]));
   FDRE #( .INIT(1'b0) ) I_Q7 (.C(C), 
              .CE(CE), 
              .D(D[7]), 
              .R(R), 
              .Q(Q[7]));
   FDRE #( .INIT(1'b0) ) I_Q8 (.C(C), 
              .CE(CE), 
              .D(D[8]), 
              .R(R), 
              .Q(Q[8]));
   FDRE #( .INIT(1'b0) ) I_Q9 (.C(C), 
              .CE(CE), 
              .D(D[9]), 
              .R(R), 
              .Q(Q[9]));
   FDRE #( .INIT(1'b0) ) I_Q10 (.C(C), 
               .CE(CE), 
               .D(D[10]), 
               .R(R), 
               .Q(Q[10]));
   FDRE #( .INIT(1'b0) ) I_Q11 (.C(C), 
               .CE(CE), 
               .D(D[11]), 
               .R(R), 
               .Q(Q[11]));
   FDRE #( .INIT(1'b0) ) I_Q12 (.C(C), 
               .CE(CE), 
               .D(D[12]), 
               .R(R), 
               .Q(Q[12]));
   FDRE #( .INIT(1'b0) ) I_Q13 (.C(C), 
               .CE(CE), 
               .D(D[13]), 
               .R(R), 
               .Q(Q[13]));
   FDRE #( .INIT(1'b0) ) I_Q14 (.C(C), 
               .CE(CE), 
               .D(D[14]), 
               .R(R), 
               .Q(Q[14]));
   FDRE #( .INIT(1'b0) ) I_Q15 (.C(C), 
               .CE(CE), 
               .D(D[15]), 
               .R(R), 
               .Q(Q[15]));
endmodule
`timescale 1ns / 1ps

module ADD16_MXILINX_PID_Module(A, 
                                B, 
                                CI, 
                                CO, 
                                OFL, 
                                S);

    input [15:0] A;
    input [15:0] B;
    input CI;
   output CO;
   output OFL;
   output [15:0] S;
   
   wire C0;
   wire C1;
   wire C2;
   wire C3;
   wire C4;
   wire C5;
   wire C6;
   wire C7;
   wire C8;
   wire C9;
   wire C10;
   wire C11;
   wire C12;
   wire C13;
   wire C14;
   wire C14O;
   wire dummy;
   wire I0;
   wire I1;
   wire I2;
   wire I3;
   wire I4;
   wire I5;
   wire I6;
   wire I7;
   wire I8;
   wire I9;
   wire I10;
   wire I11;
   wire I12;
   wire I13;
   wire I14;
   wire I15;
   wire CO_DUMMY;
   
   assign CO = CO_DUMMY;
   (* RLOC = "X0Y4" *) 
   FMAP  I_36_16 (.I1(A[8]), 
                 .I2(B[8]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I8));
   (* RLOC = "X0Y4" *) 
   FMAP  I_36_17 (.I1(A[9]), 
                 .I2(B[9]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I9));
   (* RLOC = "X0Y5" *) 
   FMAP  I_36_18 (.I1(A[10]), 
                 .I2(B[10]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I10));
   (* RLOC = "X0Y5" *) 
   FMAP  I_36_19 (.I1(A[11]), 
                 .I2(B[11]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I11));
   (* RLOC = "X0Y6" *) 
   FMAP  I_36_20 (.I1(A[12]), 
                 .I2(B[12]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I12));
   (* RLOC = "X0Y6" *) 
   FMAP  I_36_21 (.I1(A[13]), 
                 .I2(B[13]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I13));
   (* RLOC = "X0Y7" *) 
   FMAP  I_36_22 (.I1(A[14]), 
                 .I2(B[14]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I14));
   (* RLOC = "X0Y7" *) 
   FMAP  I_36_23 (.I1(A[15]), 
                 .I2(B[15]), 
                 .I3(dummy), 
                 .I4(dummy), 
                 .O(I15));
   (* RLOC = "X0Y4" *) 
   MUXCY_L  I_36_55 (.CI(C8), 
                    .DI(A[9]), 
                    .S(I9), 
                    .LO(C9));
   (* RLOC = "X0Y5" *) 
   MUXCY_L  I_36_58 (.CI(C10), 
                    .DI(A[11]), 
                    .S(I11), 
                    .LO(C11));
   (* RLOC = "X0Y5" *) 
   MUXCY_L  I_36_62 (.CI(C9), 
                    .DI(A[10]), 
                    .S(I10), 
                    .LO(C10));
   (* RLOC = "X0Y6" *) 
   MUXCY_L  I_36_63 (.CI(C11), 
                    .DI(A[12]), 
                    .S(I12), 
                    .LO(C12));
   (* RLOC = "X0Y7" *) 
   MUXCY  I_36_64 (.CI(C14), 
                  .DI(A[15]), 
                  .S(I15), 
                  .O(CO_DUMMY));
   XORCY  I_36_73 (.CI(C7), 
                  .LI(I8), 
                  .O(S[8]));
   XORCY  I_36_74 (.CI(C8), 
                  .LI(I9), 
                  .O(S[9]));
   XORCY  I_36_75 (.CI(C10), 
                  .LI(I11), 
                  .O(S[11]));
   XORCY  I_36_76 (.CI(C9), 
                  .LI(I10), 
                  .O(S[10]));
   XORCY  I_36_77 (.CI(C12), 
                  .LI(I13), 
                  .O(S[13]));
   XORCY  I_36_78 (.CI(C11), 
                  .LI(I12), 
                  .O(S[12]));
   XORCY  I_36_80 (.CI(C14), 
                  .LI(I15), 
                  .O(S[15]));
   XORCY  I_36_81 (.CI(C13), 
                  .LI(I14), 
                  .O(S[14]));
   (* RLOC = "X0Y7" *) 
   MUXCY_D  I_36_107 (.CI(C13), 
                     .DI(A[14]), 
                     .S(I14), 
                     .LO(C14), 
                     .O(C14O));
   (* RLOC = "X0Y6" *) 
   MUXCY_L  I_36_110 (.CI(C12), 
                     .DI(A[13]), 
                     .S(I13), 
                     .LO(C13));
   (* RLOC = "X0Y4" *) 
   MUXCY_L  I_36_111 (.CI(C7), 
                     .DI(A[8]), 
                     .S(I8), 
                     .LO(C8));
   XORCY  I_36_226 (.CI(CI), 
                   .LI(I0), 
                   .O(S[0]));
   XORCY  I_36_227 (.CI(C0), 
                   .LI(I1), 
                   .O(S[1]));
   XORCY  I_36_228 (.CI(C2), 
                   .LI(I3), 
                   .O(S[3]));
   XORCY  I_36_229 (.CI(C1), 
                   .LI(I2), 
                   .O(S[2]));
   XORCY  I_36_230 (.CI(C4), 
                   .LI(I5), 
                   .O(S[5]));
   XORCY  I_36_231 (.CI(C3), 
                   .LI(I4), 
                   .O(S[4]));
   XORCY  I_36_233 (.CI(C6), 
                   .LI(I7), 
                   .O(S[7]));
   XORCY  I_36_234 (.CI(C5), 
                   .LI(I6), 
                   .O(S[6]));
   (* RLOC = "X0Y3" *) 
   MUXCY_L  I_36_248 (.CI(C6), 
                     .DI(A[7]), 
                     .S(I7), 
                     .LO(C7));
   (* RLOC = "X0Y3" *) 
   MUXCY_L  I_36_249 (.CI(C5), 
                     .DI(A[6]), 
                     .S(I6), 
                     .LO(C6));
   (* RLOC = "X0Y2" *) 
   MUXCY_L  I_36_250 (.CI(C4), 
                     .DI(A[5]), 
                     .S(I5), 
                     .LO(C5));
   (* RLOC = "X0Y2" *) 
   MUXCY_L  I_36_251 (.CI(C3), 
                     .DI(A[4]), 
                     .S(I4), 
                     .LO(C4));
   (* RLOC = "X0Y1" *) 
   MUXCY_L  I_36_252 (.CI(C2), 
                     .DI(A[3]), 
                     .S(I3), 
                     .LO(C3));
   (* RLOC = "X0Y1" *) 
   MUXCY_L  I_36_253 (.CI(C1), 
                     .DI(A[2]), 
                     .S(I2), 
                     .LO(C2));
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_254 (.CI(C0), 
                     .DI(A[1]), 
                     .S(I1), 
                     .LO(C1));
   (* RLOC = "X0Y0" *) 
   MUXCY_L  I_36_255 (.CI(CI), 
                     .DI(A[0]), 
                     .S(I0), 
                     .LO(C0));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_272 (.I1(A[1]), 
                  .I2(B[1]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I1));
   (* RLOC = "X0Y0" *) 
   FMAP  I_36_275 (.I1(A[0]), 
                  .I2(B[0]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I0));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_279 (.I1(A[2]), 
                  .I2(B[2]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I2));
   (* RLOC = "X0Y1" *) 
   FMAP  I_36_283 (.I1(A[3]), 
                  .I2(B[3]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I3));
   (* RLOC = "X0Y2" *) 
   FMAP  I_36_287 (.I1(A[4]), 
                  .I2(B[4]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I4));
   (* RLOC = "X0Y2" *) 
   FMAP  I_36_291 (.I1(A[5]), 
                  .I2(B[5]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I5));
   (* RLOC = "X0Y3" *) 
   FMAP  I_36_295 (.I1(A[6]), 
                  .I2(B[6]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I6));
   (* RLOC = "X0Y3" *) 
   FMAP  I_36_299 (.I1(A[7]), 
                  .I2(B[7]), 
                  .I3(dummy), 
                  .I4(dummy), 
                  .O(I7));
   XOR2  I_36_354 (.I0(A[0]), 
                  .I1(B[0]), 
                  .O(I0));
   XOR2  I_36_355 (.I0(A[1]), 
                  .I1(B[1]), 
                  .O(I1));
   XOR2  I_36_356 (.I0(A[2]), 
                  .I1(B[2]), 
                  .O(I2));
   XOR2  I_36_357 (.I0(A[3]), 
                  .I1(B[3]), 
                  .O(I3));
   XOR2  I_36_358 (.I0(A[4]), 
                  .I1(B[4]), 
                  .O(I4));
   XOR2  I_36_359 (.I0(A[5]), 
                  .I1(B[5]), 
                  .O(I5));
   XOR2  I_36_360 (.I0(A[6]), 
                  .I1(B[6]), 
                  .O(I6));
   XOR2  I_36_361 (.I0(A[7]), 
                  .I1(B[7]), 
                  .O(I7));
   XOR2  I_36_362 (.I0(A[8]), 
                  .I1(B[8]), 
                  .O(I8));
   XOR2  I_36_363 (.I0(A[9]), 
                  .I1(B[9]), 
                  .O(I9));
   XOR2  I_36_364 (.I0(A[10]), 
                  .I1(B[10]), 
                  .O(I10));
   XOR2  I_36_365 (.I0(A[11]), 
                  .I1(B[11]), 
                  .O(I11));
   XOR2  I_36_366 (.I0(A[12]), 
                  .I1(B[12]), 
                  .O(I12));
   XOR2  I_36_367 (.I0(A[13]), 
                  .I1(B[13]), 
                  .O(I13));
   XOR2  I_36_368 (.I0(A[14]), 
                  .I1(B[14]), 
                  .O(I14));
   XOR2  I_36_369 (.I0(A[15]), 
                  .I1(B[15]), 
                  .O(I15));
   XOR2  I_36_375 (.I0(C14O), 
                  .I1(CO_DUMMY), 
                  .O(OFL));
endmodule
`timescale 1ns / 1ps

module OCR_Generator_MUSER_PID_Module(C_0, 
                                      OCR_In, 
                                      Open_Loop_1, 
                                      Reset, 
                                      Target, 
                                      OCR1, 
                                      OCR2);

    input C_0;
    input [15:0] OCR_In;
    input Open_Loop_1;
    input Reset;
    input [8:0] Target;
   output [7:0] OCR1;
   output [7:0] OCR2;
   
   wire [7:0] GND;
   wire [15:0] OCR_Curr;
   wire [15:0] OCR_f;
   wire [15:0] OCR_Twos;
   wire [15:0] OCR_16;
   wire [15:0] Target_15;
   wire XLXN_2;
   wire [15:0] XLXN_3;
   wire XLXN_5;
   wire [7:0] XLXN_15;
   wire XLXN_16;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_27;
   wire XLXN_28;
   
   (* HU_SET = "XLXI_1_14" *) 
   ADD16_MXILINX_PID_Module  XLXI_1 (.A(XLXN_3[15:0]), 
                                    .B(OCR_In[15:0]), 
                                    .CI(XLXN_5), 
                                    .CO(), 
                                    .OFL(XLXN_16), 
                                    .S(OCR_Curr[15:0]));
   (* HU_SET = "XLXI_2_15" *) 
   FD16RE_MXILINX_PID_Module  XLXI_2 (.C(C_0), 
                                     .CE(XLXN_2), 
                                     .D(OCR_f[15:0]), 
                                     .R(Reset), 
                                     .Q(XLXN_3[15:0]));
   VCC  XLXI_4 (.P(XLXN_2));
   GND  XLXI_5 (.G(XLXN_5));
   Twos_Comp_MUSER_PID_Module  XLXI_8 (.InPut(OCR_f[15:0]), 
                                      .Twos_Comp(OCR_Twos[15:0]));
   Mux_2_8_MUSER_PID_Module  XLXI_14 (.Inp0(GND[7:0]), 
                                     .Inp1(XLXN_15[7:0]), 
                                     .Sel(XLXN_20), 
                                     .Output(OCR2[7:0]));
   Mux_2_8_MUSER_PID_Module  XLXI_15 (.Inp0(XLXN_15[7:0]), 
                                     .Inp1(GND[7:0]), 
                                     .Sel(XLXN_20), 
                                     .Output(OCR1[7:0]));
   OCR_8_MUSER_PID_Module  XLXI_20 (.Inp0(OCR_16[15:0]), 
                                   .Sel(XLXN_19), 
                                   .Outpt(XLXN_15[7:0]));
   GND  XLXI_21 (.G(GND[0]));
   GND  XLXI_46 (.G(GND[1]));
   GND  XLXI_47 (.G(GND[2]));
   GND  XLXI_48 (.G(GND[3]));
   GND  XLXI_49 (.G(GND[4]));
   GND  XLXI_50 (.G(GND[5]));
   GND  XLXI_51 (.G(GND[6]));
   GND  XLXI_52 (.G(GND[7]));
   Mux_2_16_MUSER_PID_Module  XLXI_54 (.Inp0(OCR_f[15:0]), 
                                      .Inp1(OCR_Twos[15:0]), 
                                      .S_0(OCR_f[15]), 
                                      .Output(OCR_16[15:0]));
   OR2  XLXI_56 (.I0(XLXN_16), 
                .I1(XLXN_18), 
                .O(XLXN_19));
   MUXCY  XLXI_58 (.CI(OCR_In[15]), 
                  .DI(OCR_f[15]), 
                  .S(XLXN_16), 
                  .O(XLXN_20));
   Mux_2_16_MUSER_PID_Module  XLXI_67 (.Inp0(OCR_Curr[15:0]), 
                                      .Inp1(Target_15[15:0]), 
                                      .S_0(Open_Loop_1), 
                                      .Output(OCR_f[15:0]));
   BUF  XLXI_68 (.I(Target[0]), 
                .O(Target_15[0]));
   BUF  XLXI_69 (.I(Target[1]), 
                .O(Target_15[1]));
   BUF  XLXI_70 (.I(Target[2]), 
                .O(Target_15[2]));
   BUF  XLXI_71 (.I(Target[3]), 
                .O(Target_15[3]));
   BUF  XLXI_72 (.I(Target[4]), 
                .O(Target_15[4]));
   BUF  XLXI_73 (.I(Target[5]), 
                .O(Target_15[5]));
   BUF  XLXI_74 (.I(Target[6]), 
                .O(Target_15[6]));
   BUF  XLXI_75 (.I(Target[7]), 
                .O(Target_15[7]));
   BUF  XLXI_76 (.I(Target[8]), 
                .O(Target_15[8]));
   BUF  XLXI_77 (.I(Target[8]), 
                .O(Target_15[9]));
   BUF  XLXI_78 (.I(Target[8]), 
                .O(Target_15[10]));
   BUF  XLXI_79 (.I(Target[8]), 
                .O(Target_15[11]));
   BUF  XLXI_80 (.I(Target[8]), 
                .O(Target_15[12]));
   BUF  XLXI_81 (.I(Target[8]), 
                .O(Target_15[13]));
   BUF  XLXI_82 (.I(Target[8]), 
                .O(Target_15[14]));
   BUF  XLXI_103 (.I(Target[8]), 
                 .O(Target_15[15]));
   OR4  XLXI_111 (.I0(OCR_16[12]), 
                 .I1(OCR_16[13]), 
                 .I2(OCR_16[14]), 
                 .I3(OCR_16[15]), 
                 .O(XLXN_27));
   OR4  XLXI_112 (.I0(OCR_16[8]), 
                 .I1(OCR_16[9]), 
                 .I2(OCR_16[10]), 
                 .I3(OCR_16[11]), 
                 .O(XLXN_28));
   OR2  XLXI_113 (.I0(XLXN_28), 
                 .I1(XLXN_27), 
                 .O(XLXN_18));
endmodule
`timescale 1ns / 1ps

module Multiplier_8_MUSER_PID_Module(Inp0, 
                                     Inp1, 
                                     S_0, 
                                     Output);

    input [11:0] Inp0;
    input [11:0] Inp1;
    input S_0;
   output [15:0] Output;
   
   wire S0;
   wire XLXN_1;
   wire XLXN_50;
   
   MUXCY  XLXI_18 (.CI(S0), 
                  .DI(Inp0[1]), 
                  .S(S_0), 
                  .O(Output[1]));
   MUXCY  XLXI_19 (.CI(XLXN_1), 
                  .DI(Inp0[0]), 
                  .S(S_0), 
                  .O(Output[0]));
   MUXCY  XLXI_21 (.CI(Inp1[0]), 
                  .DI(Inp0[3]), 
                  .S(S_0), 
                  .O(Output[3]));
   MUXCY  XLXI_24 (.CI(Inp1[1]), 
                  .DI(Inp0[4]), 
                  .S(S_0), 
                  .O(Output[4]));
   MUXCY  XLXI_25 (.CI(Inp1[2]), 
                  .DI(Inp0[5]), 
                  .S(S_0), 
                  .O(Output[5]));
   MUXCY  XLXI_26 (.CI(Inp1[3]), 
                  .DI(Inp0[6]), 
                  .S(S_0), 
                  .O(Output[6]));
   MUXCY  XLXI_27 (.CI(Inp1[4]), 
                  .DI(Inp0[7]), 
                  .S(S_0), 
                  .O(Output[7]));
   MUXCY  XLXI_28 (.CI(Inp1[5]), 
                  .DI(Inp0[8]), 
                  .S(S_0), 
                  .O(Output[8]));
   GND  XLXI_29 (.G(XLXN_1));
   GND  XLXI_30 (.G(S0));
   MUXCY  XLXI_31 (.CI(Inp1[6]), 
                  .DI(Inp0[9]), 
                  .S(S_0), 
                  .O(Output[9]));
   MUXCY  XLXI_35 (.CI(Inp1[7]), 
                  .DI(Inp0[10]), 
                  .S(S_0), 
                  .O(Output[10]));
   MUXCY  XLXI_37 (.CI(Inp1[8]), 
                  .DI(Inp0[11]), 
                  .S(S_0), 
                  .O(Output[11]));
   MUXCY  XLXI_47 (.CI(Inp1[9]), 
                  .DI(Inp0[11]), 
                  .S(S_0), 
                  .O(Output[12]));
   MUXCY  XLXI_48 (.CI(Inp1[10]), 
                  .DI(Inp0[11]), 
                  .S(S_0), 
                  .O(Output[13]));
   MUXCY  XLXI_49 (.CI(Inp1[11]), 
                  .DI(Inp0[11]), 
                  .S(S_0), 
                  .O(Output[14]));
   MUXCY  XLXI_53 (.CI(XLXN_50), 
                  .DI(Inp0[2]), 
                  .S(S_0), 
                  .O(Output[2]));
   GND  XLXI_54 (.G(XLXN_50));
   BUF  XLXI_60 (.I(Inp0[11]), 
                .O(Output[15]));
endmodule
`timescale 1ns / 1ps

module Multiplier_2_MUSER_PID_Module(Inp0, 
                                     Inp1, 
                                     Sel, 
                                     Output);

    input [8:0] Inp0;
    input [8:0] Inp1;
    input Sel;
   output [9:0] Output;
   
   wire XLXN_1;
   
   MUXCY  XLXI_18 (.CI(Inp1[0]), 
                  .DI(Inp0[1]), 
                  .S(Sel), 
                  .O(Output[1]));
   MUXCY  XLXI_19 (.CI(XLXN_1), 
                  .DI(Inp0[0]), 
                  .S(Sel), 
                  .O(Output[0]));
   MUXCY  XLXI_20 (.CI(Inp1[1]), 
                  .DI(Inp0[2]), 
                  .S(Sel), 
                  .O(Output[2]));
   MUXCY  XLXI_21 (.CI(Inp1[2]), 
                  .DI(Inp0[3]), 
                  .S(Sel), 
                  .O(Output[3]));
   MUXCY  XLXI_24 (.CI(Inp1[3]), 
                  .DI(Inp0[4]), 
                  .S(Sel), 
                  .O(Output[4]));
   MUXCY  XLXI_25 (.CI(Inp1[4]), 
                  .DI(Inp0[5]), 
                  .S(Sel), 
                  .O(Output[5]));
   MUXCY  XLXI_26 (.CI(Inp1[5]), 
                  .DI(Inp0[6]), 
                  .S(Sel), 
                  .O(Output[6]));
   MUXCY  XLXI_27 (.CI(Inp1[6]), 
                  .DI(Inp0[7]), 
                  .S(Sel), 
                  .O(Output[7]));
   MUXCY  XLXI_28 (.CI(Inp1[7]), 
                  .DI(Inp0[8]), 
                  .S(Sel), 
                  .O(Output[8]));
   GND  XLXI_29 (.G(XLXN_1));
   BUF  XLXI_34 (.I(Inp1[8]), 
                .O(Output[9]));
endmodule
`timescale 1ns / 1ps

module Multiplier_4_MUSER_PID_Module(Inp0, 
                                     Inp1, 
                                     S_0, 
                                     Output);

    input [9:0] Inp0;
    input [9:0] Inp1;
    input S_0;
   output [11:0] Output;
   
   wire XLXN_1;
   wire XLXN_30;
   
   MUXCY  XLXI_18 (.CI(XLXN_30), 
                  .DI(Inp0[1]), 
                  .S(S_0), 
                  .O(Output[1]));
   MUXCY  XLXI_19 (.CI(XLXN_1), 
                  .DI(Inp0[0]), 
                  .S(S_0), 
                  .O(Output[0]));
   MUXCY  XLXI_20 (.CI(Inp1[0]), 
                  .DI(Inp0[2]), 
                  .S(S_0), 
                  .O(Output[2]));
   MUXCY  XLXI_21 (.CI(Inp1[1]), 
                  .DI(Inp0[3]), 
                  .S(S_0), 
                  .O(Output[3]));
   MUXCY  XLXI_24 (.CI(Inp1[2]), 
                  .DI(Inp0[4]), 
                  .S(S_0), 
                  .O(Output[4]));
   MUXCY  XLXI_25 (.CI(Inp1[3]), 
                  .DI(Inp0[5]), 
                  .S(S_0), 
                  .O(Output[5]));
   MUXCY  XLXI_26 (.CI(Inp1[4]), 
                  .DI(Inp0[6]), 
                  .S(S_0), 
                  .O(Output[6]));
   MUXCY  XLXI_27 (.CI(Inp1[5]), 
                  .DI(Inp0[7]), 
                  .S(S_0), 
                  .O(Output[7]));
   MUXCY  XLXI_28 (.CI(Inp1[6]), 
                  .DI(Inp0[8]), 
                  .S(S_0), 
                  .O(Output[8]));
   GND  XLXI_29 (.G(XLXN_1));
   GND  XLXI_30 (.G(XLXN_30));
   MUXCY  XLXI_31 (.CI(Inp1[7]), 
                  .DI(Inp0[9]), 
                  .S(S_0), 
                  .O(Output[9]));
   BUF  XLXI_39 (.I(Inp1[9]), 
                .O(Output[11]));
   MUXCY  XLXI_41 (.CI(Inp1[8]), 
                  .DI(Inp1[9]), 
                  .S(S_0), 
                  .O(Output[10]));
endmodule
`timescale 1ns / 1ps

module Multiplier_MUSER_PID_Module(InPut_9, 
                                   S_2, 
                                   S_4, 
                                   S_8, 
                                   OutPut_15);

    input [8:0] InPut_9;
    input S_2;
    input S_4;
    input S_8;
   output [15:0] OutPut_15;
   
   wire [9:0] XLXN_6;
   wire [11:0] XLXN_7;
   
   Multiplier_4_MUSER_PID_Module  XLXI_7 (.Inp0(XLXN_6[9:0]), 
                                         .Inp1(XLXN_6[9:0]), 
                                         .S_0(S_4), 
                                         .Output(XLXN_7[11:0]));
   Multiplier_2_MUSER_PID_Module  XLXI_8 (.Inp0(InPut_9[8:0]), 
                                         .Inp1(InPut_9[8:0]), 
                                         .Sel(S_2), 
                                         .Output(XLXN_6[9:0]));
   Multiplier_8_MUSER_PID_Module  XLXI_9 (.Inp0(XLXN_7[11:0]), 
                                         .Inp1(XLXN_7[11:0]), 
                                         .S_0(S_8), 
                                         .Output(OutPut_15[15:0]));
endmodule
`timescale 1ns / 1ps

module sub9bit_MUSER_PID_Module(A, 
                                ADD, 
                                B, 
                                CI, 
                                CO, 
                                OFL, 
                                S);

    input [8:0] A;
    input ADD;
    input [8:0] B;
    input CI;
   output CO;
   output OFL;
   output [8:0] S;
   
   wire C0;
   wire C1;
   wire C2;
   wire C3;
   wire C4;
   wire C5;
   wire C6;
   wire C6O;
   wire I0;
   wire I1;
   wire I2;
   wire I3;
   wire I4;
   wire I5;
   wire I6;
   wire I8;
   wire SUB0;
   wire SUB1;
   wire SUB2;
   wire SUB3;
   wire SUB4;
   wire SUB5;
   wire SUB6;
   wire SUB7;
   wire SUB8;
   wire XLXN_329;
   wire XLXN_346;
   wire CO_DUMMY;
   
   assign CO = CO_DUMMY;
   XOR3  I_36_50 (.I0(A[0]), 
                 .I1(B[0]), 
                 .I2(SUB0), 
                 .O(I0));
   (* RLOC = "X1Y0" *) 
   MUXCY_L  I_36_55 (.CI(C0), 
                    .DI(A[1]), 
                    .S(I1), 
                    .LO(C1));
   XOR3  I_36_56 (.I0(A[2]), 
                 .I1(B[2]), 
                 .I2(SUB2), 
                 .O(I2));
   XOR3  I_36_57 (.I0(A[3]), 
                 .I1(B[3]), 
                 .I2(SUB3), 
                 .O(I3));
   (* RLOC = "X1Y1" *) 
   MUXCY_L  I_36_58 (.CI(C2), 
                    .DI(A[3]), 
                    .S(I3), 
                    .LO(C3));
   XOR3  I_36_59 (.I0(A[6]), 
                 .I1(B[6]), 
                 .I2(SUB6), 
                 .O(I6));
   XOR3  I_36_60 (.I0(A[4]), 
                 .I1(B[4]), 
                 .I2(SUB4), 
                 .O(I4));
   (* RLOC = "X1Y1" *) 
   MUXCY_L  I_36_62 (.CI(C1), 
                    .DI(A[2]), 
                    .S(I2), 
                    .LO(C2));

   MUXCY_L  I_36_63 (.CI(C3), 
                    .DI(A[4]), 
                    .S(I4), 
                    .LO(C4));
   XORCY  I_36_73 (.CI(CI), 
                  .LI(I0), 
                  .O(S[0]));
   XORCY  I_36_74 (.CI(C0), 
                  .LI(I1), 
                  .O(S[1]));
   XORCY  I_36_75 (.CI(C2), 
                  .LI(I3), 
                  .O(S[3]));
   XORCY  I_36_76 (.CI(C1), 
                  .LI(I2), 
                  .O(S[2]));
   XORCY  I_36_77 (.CI(C4), 
                  .LI(I5), 
                  .O(S[5]));
   XORCY  I_36_78 (.CI(C3), 
                  .LI(I4), 
                  .O(S[4]));
   XOR3  I_36_79 (.I0(A[7]), 
                 .I1(B[7]), 
                 .I2(SUB7), 
                 .O(XLXN_329));
   XORCY  I_36_80 (.CI(C6), 
                  .LI(XLXN_329), 
                  .O(S[7]));
   XORCY  I_36_81 (.CI(C5), 
                  .LI(I6), 
                  .O(S[6]));
   XOR3  I_36_100 (.I0(A[1]), 
                  .I1(B[1]), 
                  .I2(SUB1), 
                  .O(I1));
   XOR3  I_36_109 (.I0(A[5]), 
                  .I1(B[5]), 
                  .I2(SUB5), 
                  .O(I5));

   MUXCY_L  I_36_110 (.CI(C4), 
                     .DI(A[5]), 
                     .S(I5), 
                     .LO(C5));
   (* RLOC = "X1Y0" *) 
   MUXCY_L  I_36_111 (.CI(CI), 
                     .DI(A[0]), 
                     .S(I0), 
                     .LO(C0));
   INV  I_36_112 (.I(ADD), 
                 .O(SUB0));
   XOR2  I_36_221 (.I0(C6O), 
                  .I1(CO_DUMMY), 
                  .O(OFL));
   INV  I_36_222 (.I(ADD), 
                 .O(SUB1));
   INV  I_36_223 (.I(ADD), 
                 .O(SUB2));
   INV  I_36_224 (.I(ADD), 
                 .O(SUB3));
   INV  I_36_225 (.I(ADD), 
                 .O(SUB4));
   INV  I_36_226 (.I(ADD), 
                 .O(SUB5));
   INV  I_36_227 (.I(ADD), 
                 .O(SUB6));
   INV  I_36_228 (.I(ADD), 
                 .O(SUB7));
   (* RLOC = "X1Y3" *) 
   MUXCY  XLXI_151 (.CI(XLXN_346), 
                   .DI(A[8]), 
                   .S(I8), 
                   .O(CO_DUMMY));
   XORCY  XLXI_152 (.CI(XLXN_346), 
                   .LI(I8), 
                   .O(S[8]));
   INV  XLXI_153 (.I(ADD), 
                 .O(SUB8));
   XOR3  XLXI_154 (.I0(A[8]), 
                  .I1(B[8]), 
                  .I2(SUB8), 
                  .O(I8));
   (* RLOC = "X1Y3" *) 
   MUXCY_D  XLXI_155 (.CI(C6), 
                     .DI(A[7]), 
                     .S(XLXN_329), 
                     .LO(XLXN_346), 
                     .O(C6O));

   MUXCY_L  XLXI_156 (.CI(C5), 
                     .DI(A[6]), 
                     .S(I6), 
                     .LO(C6));
endmodule
`timescale 1ns / 1ps

module Flip_flip9_MUSER_PID_Module(CE, 
                                   C_0, 
                                   I_0, 
                                   I_1, 
                                   I_2, 
                                   I_3, 
                                   I_4, 
                                   I_5, 
                                   I_6, 
                                   I_7, 
                                   I_8, 
                                   RST, 
                                   O_0, 
                                   O_1, 
                                   O_2, 
                                   O_3, 
                                   O_4, 
                                   O_5, 
                                   O_6, 
                                   O_7, 
                                   O_8);

    input CE;
    input C_0;
    input I_0;
    input I_1;
    input I_2;
    input I_3;
    input I_4;
    input I_5;
    input I_6;
    input I_7;
    input I_8;
    input RST;
   output O_0;
   output O_1;
   output O_2;
   output O_3;
   output O_4;
   output O_5;
   output O_6;
   output O_7;
   output O_8;
   
   
   FDCE #( .INIT(1'b0) ) XLXI_12 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_5), 
                 .Q(O_5));
   FDCE #( .INIT(1'b0) ) XLXI_13 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_4), 
                 .Q(O_4));
   FDCE #( .INIT(1'b0) ) XLXI_14 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_3), 
                 .Q(O_3));
   FDCE #( .INIT(1'b0) ) XLXI_15 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_2), 
                 .Q(O_2));
   FDCE #( .INIT(1'b0) ) XLXI_16 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_1), 
                 .Q(O_1));
   FDCE #( .INIT(1'b0) ) XLXI_17 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_0), 
                 .Q(O_0));
   FDCE #( .INIT(1'b0) ) XLXI_18 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_8), 
                 .Q(O_8));
   FDCE #( .INIT(1'b0) ) XLXI_19 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_7), 
                 .Q(O_7));
   FDCE #( .INIT(1'b0) ) XLXI_20 (.C(C_0), 
                 .CE(CE), 
                 .CLR(RST), 
                 .D(I_6), 
                 .Q(O_6));
endmodule
`timescale 1ns / 1ps

module D_error_MUSER_PID_Module(clk_32, 
                                Err, 
                                DErr);

    input clk_32;
    input [8:0] Err;
   output [8:0] DErr;
   
   wire XLXN_25;
   
   Flip_flip9_MUSER_PID_Module  XLXI_1 (.CE(), 
                                       .C_0(clk_32), 
                                       .I_0(Err[0]), 
                                       .I_1(Err[1]), 
                                       .I_2(Err[2]), 
                                       .I_3(Err[3]), 
                                       .I_4(Err[4]), 
                                       .I_5(Err[5]), 
                                       .I_6(Err[6]), 
                                       .I_7(Err[7]), 
                                       .I_8(Err[8]), 
                                       .RST(XLXN_25), 
                                       .O_0(DErr[0]), 
                                       .O_1(DErr[1]), 
                                       .O_2(DErr[2]), 
                                       .O_3(DErr[3]), 
                                       .O_4(DErr[4]), 
                                       .O_5(DErr[5]), 
                                       .O_6(DErr[6]), 
                                       .O_7(DErr[7]), 
                                       .O_8(DErr[8]));
   GND  XLXI_2 (.G(XLXN_25));
endmodule
`timescale 1ns / 1ps

module TotError_MUSER_PID_Module(clk_32, 
                                 SelKd, 
                                 SelKp, 
                                 Target, 
                                 Ticks, 
                                 KdMult, 
                                 KpMult);

    input clk_32;
    input [3:0] SelKd;
    input [3:0] SelKp;
    input [8:0] Target;
    input [8:0] Ticks;
   output [15:0] KdMult;
   output [15:0] KpMult;
   
   wire [8:0] Err;
   wire [8:0] XLXN_17;
   wire [8:0] XLXN_25;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   
   D_error_MUSER_PID_Module  XLXI_2 (.clk_32(clk_32), 
                                    .Err(Err[8:0]), 
                                    .DErr(XLXN_17[8:0]));
   sub9bit_MUSER_PID_Module  XLXI_23 (.A(Err[8:0]), 
                                     .ADD(XLXN_28), 
                                     .B(XLXN_17[8:0]), 
                                     .CI(XLXN_29), 
                                     .CO(), 
                                     .OFL(), 
                                     .S(XLXN_25[8:0]));
   sub9bit_MUSER_PID_Module  XLXI_29 (.A(Target[8:0]), 
                                     .ADD(XLXN_27), 
                                     .B(Ticks[8:0]), 
                                     .CI(XLXN_30), 
                                     .CO(), 
                                     .OFL(), 
                                     .S(Err[8:0]));
   Multiplier_MUSER_PID_Module  XLXI_35 (.InPut_9(Err[8:0]), 
                                        .S_2(SelKp[0]), 
                                        .S_4(SelKp[2]), 
                                        .S_8(SelKp[1]), 
                                        .OutPut_15(KpMult[15:0]));
   Multiplier_MUSER_PID_Module  XLXI_37 (.InPut_9(XLXN_25[8:0]), 
                                        .S_2(SelKd[0]), 
                                        .S_4(SelKd[2]), 
                                        .S_8(SelKd[1]), 
                                        .OutPut_15(KdMult[15:0]));
   GND  XLXI_38 (.G(XLXN_27));
   GND  XLXI_39 (.G(XLXN_28));
   VCC  XLXI_40 (.P(XLXN_29));
   VCC  XLXI_41 (.P(XLXN_30));
endmodule
`timescale 1ns / 1ps

module PID_Module(CLK_TInt, 
                  Kd, 
                  Kp, 
                  Open_Loop_0, 
                  Target, 
                  Ticks, 
                  OCR1, 
                  OCR2);

    input CLK_TInt;
    input [3:0] Kd;
    input [3:0] Kp;
    input Open_Loop_0;
    input [8:0] Target;
    input [8:0] Ticks;
   output [7:0] OCR1;
   output [7:0] OCR2;
   
   wire [15:0] XLXN_6;
   wire [15:0] XLXN_7;
   wire XLXN_11;
   wire [15:0] XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   
   (* HU_SET = "XLXI_2_16" *) 
   ADD16_MXILINX_PID_Module  XLXI_2 (.A(XLXN_6[15:0]), 
                                    .B(XLXN_7[15:0]), 
                                    .CI(XLXN_11), 
                                    .CO(), 
                                    .OFL(), 
                                    .S(XLXN_17[15:0]));
   GND  XLXI_3 (.G(XLXN_11));
   TotError_MUSER_PID_Module  XLXI_5 (.clk_32(CLK_TInt), 
                                     .SelKd(Kd[3:0]), 
                                     .SelKp(Kp[3:0]), 
                                     .Target(Target[8:0]), 
                                     .Ticks(Ticks[8:0]), 
                                     .KdMult(XLXN_7[15:0]), 
                                     .KpMult(XLXN_6[15:0]));
   INV  XLXI_7 (.I(Open_Loop_0), 
               .O(XLXN_18));
   OCR_Generator_MUSER_PID_Module  XLXI_8 (.C_0(CLK_TInt), 
                                          .OCR_In(XLXN_17[15:0]), 
                                          .Open_Loop_1(XLXN_18), 
                                          .Reset(XLXN_19), 
                                          .Target(Target[8:0]), 
                                          .OCR1(OCR1[7:0]), 
                                          .OCR2(OCR2[7:0]));
   GND  XLXI_10 (.G(XLXN_19));
endmodule
